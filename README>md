🛒 Grocery Inventory Management System - API
Welcome to the Grocery Inventory Management System repository! This project provides APIs for Admin and User functionalities such as managing groceries, viewing available items, and booking items.

📚 Table of Contents
Overview
Features
Technologies Used
Setup Instructions
API Endpoints
Docker
Contribution Guidelines
License
🚀 Overview
This application allows Admins to manage grocery items (add, remove, edit, and view items) and Users to view available grocery items and book them through orders.

🛠️ Features
Admin Responsibilities
Add new grocery items to the system.
View, update, and remove grocery items.
Manage inventory levels of grocery items.
User Responsibilities
View the list of available grocery items.
Book multiple grocery items in a single order.
💻 Technologies Used
Node.js & TypeScript for server-side logic.
Sequelize ORM for database management.
SQLite as the database for simplicity.
Docker for containerizing the application.
Express.js as the web framework.
🛠️ Setup Instructions
Follow these steps to set up the project locally.

1️⃣ Clone the Repository
bash
Copy code
git clone https://github.com/<yourusername>/qp-assessment.git
cd qp-assessment
2️⃣ Install Dependencies
Run the following to install required dependencies:

bash
Copy code
npm install
3️⃣ Setup the Database
The database is SQLite-based and will initialize automatically on server startup. No additional configuration is necessary.

4️⃣ Start the Application
bash
Copy code
npm start
The server will run at http://localhost:3000.

🐳 Docker
1. Build the Docker Image
bash
Copy code
docker-compose build
2. Start the Application
bash
Copy code
docker-compose up
This will:

Start the application server.
Map port 3000 from the container to your local machine.
3. Stop the Application
bash
Copy code
docker-compose down
🛠️ API Endpoints
Below are all available API routes:

Admin Endpoints
Method	Route	Description
POST	/admin/add	Add a new grocery item.
GET	/admin/view	View all grocery items.
PUT	/admin/update/:id	Update an existing grocery item by ID.
DELETE	/admin/delete/:id	Remove a grocery item by ID.
User Endpoints
Method	Route	Description
GET	/user/list	List all available grocery items.
POST	/user/order	Place an order for multiple grocery items.
🤝 Contribution Guidelines
We welcome contributions! Here's how you can contribute:

Fork this repository.
Clone your forked repo.
Create a new branch for your feature/bugfix:
bash
Copy code
git checkout -b feature/your-feature
Commit your changes:
bash
Copy code
git commit -m "Add feature/bugfix details"
Push your branch to GitHub:
bash
Copy code
git push origin feature/your-feature
Open a Pull Request on the main repository.
📝 License
This project is licensed under the MIT License.
